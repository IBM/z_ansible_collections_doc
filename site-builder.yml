################################################################################
# Copyright (c) IBM Corporation 2020
#
# Description:
#    This playbook will generate documentation for all collections in the
#    registry.yml, perform validation, allow for a preview of generated doc
#    and upload to gh-pages.
#
# Group_vars:
#    Booleans designed to control the flow of this playbook to run this
#    playbook headless. See group_vars/all.yml for more information.
#
#    deploy_to_gh_pages - default is True, it will instruct the playbook to
#       deploy the generated HTML to the doc-site (site/gh-pages).
#
# Usage:
#    ansible-playbook -i inventory site-builder.yml --ask-vault-pass
################################################################################

---
- hosts: all
  gather_facts: no
  connection: local

  # ##############################################################################
  # # Parse 'registry.yml' for certified contributors (key:value)
  # ##############################################################################

  tasks:
    - name: Parse the registry for collection entries
      include_vars: registry.yml

    - name: Display the registered collections and properites in `registry.yml`.
      debug:
         var: collections[item]
      with_items: "{{collections}}"

    ############################################################################
    # Evaluate the state of all collections currently in the repo and compare
    # them to the registry.yml
    #############################################################################

    - name: Evaluate which collections are in directory `source/<collection>`
      stat:
        path: source/{{ item }}
      register: git_submodule
      with_items: "{{collections}}"

    - name: Display the colletions in directory `source/<collection>`
      debug:
        msg: "Collection source/{{item.item}} exists."
      with_items: "{{ git_submodule.results }}"

    - name: Checkout the collections in the registry to this repository
      shell: |
          touch .gitmodules
          git submodule add {{ collections[item].git}} source/{{ item }}
          git submodule init
      with_items: "{{collections}}"
      register: git_add_submodules

    - name: Update the collections contents with Git for collections under `source/<collection>`
      shell: |
          cd source/{{ item }}
          git fetch --all
          git reset --hard origin/{{ collections[item].origin }}
          git checkout {{ collections[item].latest }}
          git pull origin {{ collections[item].latest }}
      with_items: "{{collections}}"
      register: git_checkout_latest

    - name: Display the results to updating the collections under `source/<collection>`
      debug: msg="{{ git_checkout_latest }}"

    # ############################################################################
    # # Generate and view HTML
    # ############################################################################

    - name: Generate HTML and display the results locally in the users browser
      raw: make clean; make html; make view-html;

    # ############################################################################
    # # Deploy HTML to gh-pages if deploy_to_gh_pages=True
    # ############################################################################

    - meta: end_play
      when: not deploy_to_gh_pages

    - name: Copy the generated HTML from `build/html/` to `site/gh-pages/`
      shell: |
          cd site/gh-pages
          git checkout gh-pages
          cp -R ../../build/html/* .
          git add .
          git status
          git commit -m "Automated commit to update documentation"
          git push -f
          cd ../..
          git checkout master
          git status
      register: git_update_doc
      when: deploy_to_gh_pages

    # See https://ibm.github.io/z_ansible_collections_doc/index.html
    - name: Display the HTML content uploaded to the doc site (gh-pages)
      debug: msg="{{ git_update_doc }}"
      when: deploy_to_gh_pages
